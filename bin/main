#!/usr/bin/env ruby
<<<<<<< HEAD
puts "Hello world!"
=======

# rubocop:disable Style/StringLiterals, Metrics/CyclomaticComplexity, Metrics/PerceivedComplexity, Style/GuardClause

class Tictactoe
  attr_reader :grid

  def initialize
    @grid = [1, 2, 3, 4, 5, 6, 7, 8, 9]
  end

  def show_grid
    @grid.each_with_index do |item, index|
      if ((index + 1) % 3).zero?
        puts "#{item} |"
        puts "============="
      else
        print " #{item} |"
      end
    end
  end

  def ask
    puts "#{turn} It\'s your turn:"
  end

  def move
    ask
    puts "Select one from the available moves:"
    move = gets.chomp.to_i
    until check_position?(move - 1)
      puts "#{turn} Select one from the available moves this position is already used:"
      move = gets.chomp.to_i
    end
    add_elements(move - 1)
    show_grid
  end

  def player?
    one = 0
    two = 0
    @grid.each do |item|
      if item == "X"
        one += 1
      elsif item == "O"
        two += 1
      end
    end
    one > two
  end

  def turn
    player? ? "Player TWO" : "Player ONE"
  end

  def check_position?(pos)
    @grid[pos] == "X" || @grid[pos] == "O" || pos > 8 ? false : true
  end

  def add_elements(pos)
    @grid[pos] = player? ? "O" : "X"
  end

  def full?
    i = 0
    while i < @grid.size
      return false if @grid[i].is_a?(Integer)

      i += 1
    end
    true
  end

  def comb_one
    unless @grid[4].is_a?(Integer)
      if (@grid[1] == @grid[4] && @grid[7] == @grid[4]) ||
         (@grid[0] == @grid[4] && @grid[8] == @grid[4]) ||
         (@grid[2] == @grid[4] && @grid[6] == @grid[4])
        true
      end
    end
  end

  def comb_two
    unless @grid[0].is_a?(Integer)
      if (@grid[0] == @grid[3] && @grid[0] == @grid[6]) ||
         (@grid[0] == @grid[1] && @grid[0] == @grid[2])
        true
      end
    end
  end

  def comb_three
    unless @grid[8].is_a?(Integer)
      if (@grid[8] == @grid[7] && @grid[8] == @grid[6]) ||
         (@grid[8] == @grid[5] && @grid[8] == @grid[2])
        true
      end
    end
  end

  def win?
    true if comb_one || comb_two || comb_three
  end

  def winner
    player? ? "Player ONE" : "Player TWO"
  end

  def play
    show_grid
    loop do
      if full?
        puts "Its a draw, the grid is full"
        break
      end
      move
      if win?
        puts "#{winner} wins"
        break
      else
        puts "Its a draw"
      end
    end
  end
end

game = Tictactoe.new
game.play

# rubocop:enable Style/StringLiterals, Metrics/CyclomaticComplexity, Metrics/PerceivedComplexity, Style/GuardClause
>>>>>>> bccd4820ce5f38d95a467bffd2a88736d2bc43a2
